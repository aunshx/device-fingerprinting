import numpy as np
import joblib

# Load the saved model
clf = joblib.load('./models/windows/random_forest_model.pkl')
print("Model loaded from 'random_forest_model.pkl'")

# Load the platform categories
platform_categories = joblib.load('./models/windows/platform_categories.pkl')
print("Platform categories loaded from 'platform_categories.pkl'")

# Define the prediction functionauns
def predict_platform_with_prob(operation_output):
    feature = [
        np.mean(operation_output),
        np.median(operation_output),
        np.std(operation_output),
        np.min(operation_output),
        np.max(operation_output)
    ]
    probabilities = clf.predict_proba([feature])[0]
    predicted_index = np.argmax(probabilities)
    predicted_platform = platform_categories[predicted_index]
    probability_percentage = probabilities[predicted_index] * 100
    return predicted_platform, probability_percentage, probabilities

# Example usage with new data
example_output_str =  "[29.51499994378537, 636.6799999959767, 753.0600000172853, 373.810000019148, 416.5099998936057, 337.57500001229346, 580.7499999646097, 516.910000005737, 1118.889999925159, 559.7149999812245, 418.4850000310689, 497.3600000375882, 353.39000006206334, 240.2600001078099, 529.5600000536069, 10.805000085383654, 1382.0600000908598, 256.75499998033047, 366.1050000227988, 1031.9899999303743, 71.51499995961785, 218.0299999890849, 222.78000006917864, 167.5049999030307, 107.4400000507012, 31.590000027790666, 152.46499993372709, 61.160000041127205, 127.86000000778586, 58.25500003993511, 861.5500000305474, 28.21999997831881, 160.58999998494983, 23.20499997586012, 905.3149999817833, 214.1350000165403, 2248.5999999335036, 26.369999977760017, 36.115000024437904, 66.62000005599111, 112.77499992866069, 1383.2300000358373, 93.37500005494803, 170.36000010557473, 825.139999971725, 1101.8550000153482, 407.5799999991432, 563.9900000533089, 456.6449999110773, 695.3550000907853, 566.3249999051914, 378.690000041388, 2650.3849999280646, 105.77999998349696, 1197.5950000341982, 97.53499994985759, 601.6550000058487, 18.02499999757856, 33.24999997857958, 47.390000079758465, 117.68500006292015, 31.21000004466623, 21.580000058747828, 34.41000008024275, 24.12499999627471, 1061.0250000609085, 3611.9000000180677, 368.57499997131526, 715.0200000032783, 259.30000003427267, 409.5749999396503, 1300.9249999886379, 1045.270000002347, 4016.1349999252707, 1299.6649999404326, 637.6099999761209, 547.6799999596551, 6.655000033788383, 1399.459999985993, 511.51999994181097, 1236.8149999529123, 633.8100000284612, 1156.5049999626353, 1107.0600000675768, 350.55499989539385, 1245.6849999725819, 368.7800000188872, 719.2500000819564, 265.6000000424683, 958.2399999490008, 514.1799999400973, 323.09499999973923, 780.1500000059605, 1061.32500001695, 703.4250000724569, 316.54000002890825, 589.5149999996647, 334.11500009242445, 607.069999910891, 460.9450000571087, 1314.3050000071526]"

example_output = list(map(float, example_output_str.strip('[]').split(', ')))

predicted_platform, probability, probabilities = predict_platform_with_prob(example_output)
print(f'Predicted Platform: {predicted_platform} Probability: {probability:.2f}%')

# To print probabilities for all classes
for i, prob in enumerate(probabilities):
    print(f'Platform: {platform_categories[i]} Probability: {prob * 100:.2f}%')
